# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: cimg/python:3.8.12
        environment:
          CIRCLECI: true
          PGHOST: 127.0.0.1
          RUN_ENV: test
      - image: cimg/postgres:11.17
        environment:
          POSTGRES_USER: ynr
          POSTGRES_DB: ynr
      - image: circleci/redis:3.2.12-alpine

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
           keys:
             - v1-dependencies-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/sopn_parsing.txt" }}-{{ checksum "requirements/testing.txt" }}
      - run:
          name: Install APT packages
          command: |
            sudo apt-get update
            sudo apt-get install python-tk ghostscript
      - run:
          name: Install pandoc
          command: |
            wget https://github.com/jgm/pandoc/releases/download/2.17.1.1/pandoc-2.17.1.1-1-amd64.deb
            sudo dpkg -i pandoc-2.17.1.1-1-amd64.deb
            sudo apt install texlive-latex-base texlive-latex-extra
      - run:
          name: Create venv
          command: |
            python -m venv .venv
            . .venv/bin/activate
            pip install -U pip
      - run:
          name: Install Coveralls
          command: |
            . .venv/bin/activate
            pip install coveralls
      - run:
          name: install dependencies
          command: |
            . .venv/bin/activate
            pip install -r requirements/testing.txt

      - save_cache:
          paths:
            - .venv
          key: v1-dependencies-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/sopn_parsing.txt" }}-{{ checksum "requirements/testing.txt" }}

      - run:
          name: Pre test checks
          environment:
            CIRCLECI: true
            RUN_ENV: test
          command: |
            . .venv/bin/activate
            pip check
            python manage.py check
            python manage.py makemigrations --check
            black --check .
      - run:
          name: run tests
          environment:
            CIRCLECI: true
            RUN_ENV: test
          command: |
            . .venv/bin/activate
            pytest -x --cov-report= --cov --flakes --junitxml=test-results/junit.xml

      # Coverage
      - run:
          name: Update Coveralls
          command: |
            . .venv/bin/activate
            coveralls

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results
