# Generated by Django 3.2.10 on 2021-12-14 17:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import moderation_queue.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("people", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("candidates", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SuggestedPostLock",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "justification",
                    models.TextField(
                        blank=True,
                        help_text="e.g I've reviewed the nomination paper for this area",
                    ),
                ),
                ("ballot_hash", models.CharField(max_length=255)),
                (
                    "ballot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="candidates.ballot",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QueuedImage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "why_allowed",
                    models.CharField(
                        choices=[
                            (
                                "public-domain",
                                "This photograph is free of any copyright restrictions",
                            ),
                            (
                                "copyright-assigned",
                                "I own copyright of this photo and I assign the copyright to Democracy Club Limited in return for it being displayed on this site",
                            ),
                            (
                                "profile-photo",
                                "This is the candidate's public profile photo from social media (e.g. Twitter, Facebook) or their official campaign page",
                            ),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=64,
                    ),
                ),
                ("justification_for_use", models.TextField(blank=True)),
                (
                    "decision",
                    models.CharField(
                        choices=[
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("undecided", "Undecided"),
                            ("ignore", "Ignore"),
                        ],
                        default="undecided",
                        max_length=32,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        max_length=512,
                        upload_to=moderation_queue.models.queued_image_filename,
                    ),
                ),
                (
                    "crop_min_x",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "crop_min_y",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "crop_max_x",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "crop_max_y",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("detection_metadata", models.TextField(blank=True)),
                ("face_detection_tried", models.BooleanField(default=False)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "person",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="people.person",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
