# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-10-23 17:46
from __future__ import unicode_literals

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import popolo.behaviors.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("elections", "0013_remove_area"),
        ("elections", "0013_remove_area"),
        ("people", "0002_change_related_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_date",
                    models.CharField(
                        blank=True,
                        help_text="The date when the validity of the item starts",
                        max_length=10,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Date has wrong format",
                                regex="^[0-9]{4}(-[0-9]{2}){0,2}$",
                            ),
                            popolo.behaviors.models.validate_partial_date,
                        ],
                        verbose_name="start date",
                    ),
                ),
                (
                    "end_date",
                    models.CharField(
                        blank=True,
                        help_text="The date when the validity of the item ends",
                        max_length=10,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Date has wrong format",
                                regex="^[0-9]{4}(-[0-9]{2}){0,2}$",
                            ),
                            popolo.behaviors.models.validate_partial_date,
                        ],
                        verbose_name="end date",
                    ),
                ),
                (
                    "created_at",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="creation time",
                    ),
                ),
                (
                    "updated_at",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="last modification time",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A person's preferred full name",
                        max_length=512,
                        verbose_name="name",
                    ),
                ),
                (
                    "family_name",
                    models.CharField(
                        blank=True,
                        help_text="One or more family names",
                        max_length=128,
                        verbose_name="family name",
                    ),
                ),
                (
                    "given_name",
                    models.CharField(
                        blank=True,
                        help_text="One or more primary given names",
                        max_length=128,
                        verbose_name="given name",
                    ),
                ),
                (
                    "additional_name",
                    models.CharField(
                        blank=True,
                        help_text="One or more secondary given names",
                        max_length=128,
                        verbose_name="additional name",
                    ),
                ),
                (
                    "honorific_prefix",
                    models.CharField(
                        blank=True,
                        help_text="One or more honorifics preceding a person's name",
                        max_length=128,
                        verbose_name="honorific prefix",
                    ),
                ),
                (
                    "honorific_suffix",
                    models.CharField(
                        blank=True,
                        help_text="One or more honorifics following a person's name",
                        max_length=128,
                        verbose_name="honorific suffix",
                    ),
                ),
                (
                    "patronymic_name",
                    models.CharField(
                        blank=True,
                        help_text="One or more patronymic names",
                        max_length=128,
                        verbose_name="patronymic name",
                    ),
                ),
                (
                    "sort_name",
                    models.CharField(
                        blank=True,
                        help_text="A name to use in an lexicographically ordered list",
                        max_length=128,
                        verbose_name="sort name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="A preferred email address",
                        max_length=254,
                        null=True,
                        verbose_name="email",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        help_text="A gender",
                        max_length=128,
                        verbose_name="gender",
                    ),
                ),
                (
                    "birth_date",
                    models.CharField(
                        blank=True,
                        help_text="A date of birth",
                        max_length=10,
                        verbose_name="birth date",
                    ),
                ),
                (
                    "death_date",
                    models.CharField(
                        blank=True,
                        help_text="A date of death",
                        max_length=10,
                        verbose_name="death date",
                    ),
                ),
                (
                    "summary",
                    models.CharField(
                        blank=True,
                        help_text="A one-line account of a person's life",
                        max_length=1024,
                        verbose_name="summary",
                    ),
                ),
                (
                    "biography",
                    models.TextField(
                        blank=True,
                        help_text="An extended account of a person's life",
                        verbose_name="biography",
                    ),
                ),
                (
                    "national_identity",
                    models.CharField(
                        blank=True,
                        help_text="A national identity",
                        max_length=128,
                        null=True,
                        verbose_name="national identity",
                    ),
                ),
                ("versions", models.TextField(blank=True)),
                (
                    "not_standing",
                    models.ManyToManyField(
                        related_name="persons_not_standing_tmp",
                        to="elections.Election",
                    ),
                ),
            ],
            options={"verbose_name_plural": "People"},
        ),
        migrations.AlterField(
            model_name="personimage",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="popolo.Person",
            ),
        ),
    ]
