import candidates.views as views
from django.urls import re_path

urlpatterns = [
    re_path(
        r"^person/(?P<person_id>\d+)/revert$",
        views.RevertPersonView.as_view(),
        name="person-revert",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/merge_conflict/(?P<other_person_id>\d+)/not_standing/$",
        views.CorrectNotStandingMergeView.as_view(),
        name="person-merge-correct-not-standing",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/merge$",
        views.MergePeopleView.as_view(),
        name="person-merge",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/duplicate$",
        views.DuplicatePersonView.as_view(),
        name="person-duplicate",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/other-names$",
        views.PersonOtherNamesView.as_view(),
        name="person-other-names",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/other-names/create$",
        views.PersonOtherNameCreateView.as_view(),
        name="person-other-name-create",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/other-name/(?P<pk>\d+)/delete$",
        views.PersonOtherNameDeleteView.as_view(),
        name="person-other-name-delete",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/other-name/(?P<pk>\d+)/update/?$",
        views.PersonOtherNameUpdateView.as_view(),
        name="person-other-name-update",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/update/?$",
        views.UpdatePersonView.as_view(),
        name="person-update",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/split/?$",
        views.PersonSplitView.as_view(),
        name="person-split",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/review/?$",
        views.ReviewPersonSplitView.as_view(),
        name="review_split_person",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)/confirm_split/?$",
        views.ConfirmPersonSplitView.as_view(),
        name="confirm_split_person",
    ),
    re_path(
        r"^person/create/select_election$",
        views.NewPersonSelectElectionView.as_view(),
        name="person-create-select-election",
    ),
    re_path(
        r"^person/(?P<person_id>\d+)(?:/(?P<ignored_slug>.*))?$",
        views.PersonView.as_view(),
        name="person-view",
    ),
]
