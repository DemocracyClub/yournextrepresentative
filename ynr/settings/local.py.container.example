# Only set DEBUG to True in development environments.
DEBUG = True

# These Postgres settings should match docker-compose.yml.
# Credentials are not required.
DATABASES = {"default": {
  "ENGINE": "django.db.backends.postgresql",
  "HOST": "dbpsql", "NAME": 'ynr', "USER": "ynr",
}}

# The containerised setup does not include the same memcache service that
# production currently uses for its cache, so we explicitly set up a dummy
# cache when running locally.
CACHES = {"default": {"BACKEND": "django.core.cache.backends.dummy.DummyCache"}}

# This short, known value is insecure.
SECRET_KEY = "insecure"

# Certain errors are very noisy (obscuring the real problem) if this list is
# empty.
ADMINS = [("Dummy Admin", "dummy@example.com")]

# This permits the site to be served at localhost:8080.
ALLOWED_HOSTS = ['*']

# This unpleasantness adds the container's internal IP to the list of those IPs
# permitted to access the Django debug toolbar, which allows it to be enabled.
# We believe the container's own IP needs to be in this list because of
# something to do with the container networking, or the HTTP server gunicorn's
# reverse-proxy setup, or both.
# TODO: Replace with a better method, either here or by changing the
# container/gunicorn setup. https://pypi.org/project/netifaces/ also exists,
# but might not be considered "better".
import socket
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.connect(("8.8.8.8", 80))
INTERNAL_IPS = [ '127.0.0.1', str(s.getsockname()[0]) ]
s.close()
